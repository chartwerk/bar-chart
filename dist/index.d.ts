// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   ../@chartwerk/base
//   ../d3

import { ChartwerkBase } from '@chartwerk/base';
import * as d3 from 'd3';
import { TimeSerie, Options, TickOrientation, TimeFormat } from '@chartwerk/base';

export class ChartwerkBarChart extends ChartwerkBase<BarTimeSerie, BarOptions> {
    constructor(el: HTMLElement, _series?: BarTimeSerie[], _options?: BarOptions);
    _renderMetrics(): void;
    _renderMetric(datapoints: number[][], options: {
        color: string;
    }, idx: number): void;
    renderSharedCrosshair(timestamp: number): void;
    hideSharedCrosshair(): void;
    onMouseMove(): void;
    onMouseOver(): void;
    onMouseOut(): void;
    get rectWidth(): number;
    getBarHeight(value: number): number;
    get yScale(): d3.ScaleLinear<number, number>;
    get xScale(): d3.ScaleTime<number, number>;
}
export const VueChartwerkBarChartObject: {
    render(createElement: any): any;
    mixins: any[];
    methods: {
        render(): void;
    };
};

export type BarTimeSerie = TimeSerie;
export type BarOptionsParams = {
    renderBarLabels: boolean;
};
export type BarOptions = Options & Partial<BarOptionsParams>;
export { TickOrientation, TimeFormat };

